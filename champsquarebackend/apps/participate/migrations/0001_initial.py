# Generated by Django 2.2 on 2020-07-26 05:50

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True, verbose_name='used to store metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='datetime when model is created')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='datetime when model is updated last time')),
                ('number', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True, verbose_name='Participation number')),
                ('start_date_time', models.DateTimeField(default=django.utils.timezone.now, help_text='Date-time from which this quiz will be active', verbose_name='Start date-time of quiz')),
                ('end_date_time', models.DateTimeField(blank=True, help_text='Date-time after which this quiz will be deactivated automatically', null=True, verbose_name='End date-time of quiz')),
                ('duration', models.PositiveIntegerField(default=60, help_text='Duration of quiz in minutes', verbose_name='Duration of quiz')),
                ('is_active', models.BooleanField(default=True, help_text='Only active user will be able to take quiz', verbose_name='Is Published?')),
                ('multiple_attempts_allowed', models.BooleanField(default=False, help_text='Is user allowed to attempt same quiz multiple time?', verbose_name='Multiple Attempts Allowed?')),
                ('view_answerpaper', models.BooleanField(default=False, help_text='Is user allowed to view his test report after he submits the test!', verbose_name='Can see answer-paper?')),
                ('ip_restriction', models.BooleanField(default=False, help_text='User will be only able to resume test from same ip if turned on!', verbose_name='IP Restricted?')),
                ('resume_interval', models.PositiveIntegerField(default=15, help_text='The time interval after which user will not be able to resume test', verbose_name='Resume Interval')),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address of user')),
            ],
            options={
                'verbose_name': 'Participant',
                'verbose_name_plural': 'Participants',
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
    ]
