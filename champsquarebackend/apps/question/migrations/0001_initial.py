# Generated by Django 2.2 on 2020-07-23 08:27

import ckeditor_uploader.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name of subject')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name of topic')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.Subject', verbose_name='Subject')),
            ],
            options={
                'verbose_name': 'Topic',
                'verbose_name_plural': 'Topics',
                'ordering': ['name'],
                'abstract': False,
                'unique_together': {('name', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True, verbose_name='used to store metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='datetime when model is created')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='datetime when model is updated last time')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('question_type', models.CharField(choices=[(None, 'Choose Question Type'), ('mcq', 'Single Correct Choice'), ('mcc', 'Multiple Correct Choices'), ('integer', 'Answer in Integer'), ('paragraph', 'Paragraph Type')], default='mcq', max_length=50, verbose_name='type of question')),
                ('right_answer', models.CharField(blank=True, help_text='Right Answer of question, must be an Integer. eg - 1 for option a, 2 for option b and so on', max_length=10, null=True, verbose_name='right answer')),
                ('active', models.BooleanField(default=True, verbose_name='question active?')),
                ('points', models.FloatField(default=4.0, verbose_name='points that each question carry')),
                ('negative_points', models.FloatField(default=0.0, verbose_name='negative points on wrong answer')),
                ('difficulty_level', models.CharField(blank=True, choices=[(None, 'Choose Difficulty Level'), ('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], max_length=20, null=True, verbose_name='difficulty level of question')),
                ('flagged', models.PositiveIntegerField(default=0, help_text='Flag a wrong question', verbose_name='Flag Wrong Questions')),
                ('solution', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Solution of question')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subjects', to='question.Subject', verbose_name='subjects')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='topics', to='question.Topic', verbose_name='topic')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
    ]
